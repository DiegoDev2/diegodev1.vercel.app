name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  NODE_ENV: production

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm lint

      - name: TypeScript check
        run: npx tsc --noEmit

      - name: Sanity TypeScript check
        run: cd sanity && pnpm install --frozen-lockfile && npx tsc --noEmit

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Next.js
        run: pnpm build

      - name: Build Sanity Studio
        run: cd sanity && pnpm install --frozen-lockfile && pnpm build

      - name: Upload Next.js build
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: .next/
          retention-days: 1

      - name: Upload Sanity build
        uses: actions/upload-artifact@v4
        with:
          name: sanity-build
          path: sanity/dist/
          retention-days: 1

  deploy-production:
    name: Deploy Production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Pull Vercel Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Sanity Studio
        env:
          SANITY_AUTH_TOKEN: ${{ secrets.SANITY_AUTH_TOKEN }}
        run: |
          if [ -n "$SANITY_AUTH_TOKEN" ]; then
            cd sanity
            pnpm install --frozen-lockfile
            pnpm deploy
          else
            echo "SANITY_AUTH_TOKEN not set, skipping Sanity deployment"
          fi

  deploy-preview:
    name: Deploy Preview
    if: github.event_name == 'pull_request'
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Pull Vercel Environment
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$url" >> $GITHUB_OUTPUT

      - name: Comment PR with deployment URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview deployment ready!**\n\n**URL:** ${{ steps.deploy.outputs.url }}\n\n✅ Deployment completed successfully`
            })

  lighthouse:
    name: Performance Audit
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: deploy-production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 30

      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://diegodev1.vercel.app
          uploadArtifacts: true
          temporaryPublicStorage: true

  notify:
    name: Notify Status
    if: always() && github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [deploy-production, lighthouse]
    runs-on: ubuntu-latest

    steps:
      - name: Success Notification
        if: needs.deploy-production.result == 'success'
        run: |
          echo "🚀 Portfolio deployed successfully!"
          echo "🌐 URL: https://diegodev1.vercel.app"
          echo "🎨 Sanity Studio: https://portafolio.sanity.studio"

      - name: Failure Notification
        if: needs.deploy-production.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          exit 1
