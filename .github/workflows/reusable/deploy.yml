name: Deploy Application

on:
  workflow_call:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        type: string
        default: 'production'
      deploy-sanity:
        description: 'Deploy Sanity Studio'
        required: false
        type: boolean
        default: false
    secrets:
      VERCEL_TOKEN:
        required: true
      SANITY_AUTH_TOKEN:
        required: false
    outputs:
      deployment-url:
        description: 'Deployment URL'
        value: ${{ jobs.deploy.outputs.url }}

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deploy-vercel.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Pull Vercel Environment
        run: vercel pull --yes --environment=${{ inputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }} ${{ inputs.environment == 'production' && '--prod' || '' }}

      - name: Deploy to Vercel
        id: deploy-vercel
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} ${{ inputs.environment == 'production' && '--prod' || '' }})
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "ðŸš€ Deployed to: $url"

      - name: Deploy Sanity Studio
        if: inputs.deploy-sanity && secrets.SANITY_AUTH_TOKEN
        run: |
          cd sanity
          pnpm install --frozen-lockfile
          SANITY_AUTH_TOKEN=${{ secrets.SANITY_AUTH_TOKEN }} pnpm deploy
          echo "âœ… Sanity Studio deployed"

      - name: Comment PR with deployment URL
        if: github.event_name == 'pull_request' && inputs.environment != 'production'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview deployment ready!**\n\n**URL:** ${{ steps.deploy-vercel.outputs.url }}\n\nâœ… Deployment completed successfully`
            })
